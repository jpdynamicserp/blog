trigger:
  branches:
    include:
    - main
  paths:
    exclude:
      - azure-pipelines.yml  # このファイル自体の変更はトリガーしない

pool:
  vmImage: 'ubuntu-latest'

variables:
  newBranchName: 'new-feature-$(Build.BuildId)'
  azureDevOpsToken: $(AzureDevOpsPersonalAccessToken)
  githubToken: $(GithubPersonalAccessToken)
  workingDirectory: $(Pipeline.Workspace)/s
  gitUserEmail: 'kanagayo@microsoft.com'
  gitUserName: 'kanagayo'

steps:
- script: git clone https://$(azureDevOpsToken)@dev.azure.com/jpdynamics/DynamicsERP/_git/blog $(workingDirectory)/repoA
  displayName: 'Clone Repo A from Azure DevOps'

- script: git clone https://$(githubToken)@github.com/jpdynamicserp/blog.git $(workingDirectory)/repoB
  displayName: 'Clone Repo B from GitHub'

- script: |
    cd $(workingDirectory)/repoB
    git config user.email "$(gitUserEmail)"
    git config user.name "$(gitUserName)"
    git checkout -b $(newBranchName)
    git remote add repoA $(workingDirectory)/repoA
    git fetch repoA
    git merge repoA/main --allow-unrelated-histories --strategy-option theirs
  displayName: 'Merge Changes from Repo A to New Branch in Repo B with Conflict Resolution'

# azure-pipelines.yml を削除
- script: |
    cd $(workingDirectory)/repoB
    git rm azure-pipelines.yml
    git commit -m "Remove azure-pipelines.yml"
  displayName: 'Remove azure-pipelines.yml from Repo B'

- script: |
    cd $(workingDirectory)/repoB
    git push origin $(newBranchName)
  displayName: 'Push New Branch to Repo B'

- script: |
    curl -X POST -H "Authorization: token $(githubToken)" -d '{
    "title": "New Feature",
    "head": "'$(newBranchName)'",
    "base": "main",
    "body": "Please pull these changes."
    }' https://api.github.com/repos/jpdynamicserp/blog/pulls
  displayName: 'Create Pull Request in Repo B'